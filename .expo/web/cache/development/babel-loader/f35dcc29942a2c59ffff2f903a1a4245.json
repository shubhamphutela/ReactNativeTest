{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      clickCount: 1,\n      searchText: 'Text'\n    };\n    _this.state = {\n      fontsLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadFont\",\n    value: function loadFont() {\n      return _regeneratorRuntime.async(function loadFont$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'Regular': require(\"./assets/Fonts/\")\n              }));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadFont();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.lableText,\n          children: \"Click test\"\n        }), _jsx(Pressable, {\n          style: styles.clickButton,\n          onPress: function onPress() {\n            _this2.setState({\n              clickCount: _this2.state.clickCount + 1\n            });\n          },\n          children: _jsx(Text, {\n            children: \"Click me\"\n          })\n        }), _jsxs(View, {\n          style: {\n            height: 56,\n            justifyContent: 'center',\n            borderColor: '#ccc',\n            borderWidth: 2,\n            padding: 5,\n            borderRadius: 8,\n            marginTop: 15,\n            marginBottom: 15\n          },\n          children: [_jsx(Text, {\n            children: \"Number of button clicks\"\n          }), _jsx(Text, {\n            children: this.state.clickCount\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.lableText,\n            children: \"Search Test\"\n          }), _jsx(TextInput, {\n            placeholder: \"Search\",\n            onChangeText: function onChangeText(text) {\n              return _this2.setState({\n                searchText: text\n              });\n            },\n            style: {\n              height: 56,\n              justifyContent: 'center',\n              borderColor: '#ccc',\n              borderWidth: 2,\n              padding: 5,\n              borderRadius: 8,\n              marginTop: 5\n            }\n          })]\n        }), _jsxs(View, {\n          style: {\n            height: 80,\n            justifyContent: 'center',\n            borderColor: '#ccc',\n            borderWidth: 2,\n            padding: 5,\n            borderRadius: 8,\n            marginTop: 15,\n            marginBottom: 15\n          },\n          children: [_jsx(Text, {\n            children: \"Searched text \"\n          }), _jsx(Text, {\n            children: this.state.searchText\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.lableText,\n            children: \"Message Box\"\n          }), _jsx(TextInput, {\n            placeholder: \"Search\",\n            onChangeText: function onChangeText(text) {\n              return _this2.setState({\n                searchText: text\n              });\n            },\n            style: {\n              height: 56,\n              justifyContent: 'center',\n              borderColor: '#ccc',\n              borderWidth: 2,\n              padding: 5,\n              borderRadius: 8,\n              marginTop: 5\n            }\n          })]\n        }), _jsx(StatusBar, {\n          style: \"auto\"\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 15\n  },\n  lableText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  clickButton: {\n    backgroundColor: '#FFA978',\n    height: 56,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["D:/TestProject/App.js"],"names":["StatusBar","React","App","props","state","clickCount","searchText","fontsLoaded","Font","loadAsync","require","setState","loadFont","styles","container","lableText","clickButton","height","justifyContent","borderColor","borderWidth","padding","borderRadius","marginTop","marginBottom","text","Component","StyleSheet","create","flex","backgroundColor","fontSize","fontWeight","alignItems","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Pressable, TextInput } from 'react-native';\n\n\n\nexport default class App extends React.Component {\n\n  state = {\n    clickCount: 1,\n    searchText: 'Text'\n  };\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      fontsLoaded: false,\n    }\n  }\n  async loadFont() {\n    await Font.loadAsync({\n      'Regular': require('./assets/Fonts/'),\n    });\n    this.setState({ fontsLoaded: true });\n  }\n\n  componentDidMount() {\n    this.loadFont();\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.lableText}>Click test</Text>\n        <Pressable style={styles.clickButton} onPress={() => { this.setState({ clickCount: this.state.clickCount + 1 }) }}>\n          <Text>Click me</Text>\n        </Pressable>\n\n        <View style={{ height: 56, justifyContent: 'center', borderColor: '#ccc', borderWidth: 2, padding: 5, borderRadius: 8, marginTop: 15, marginBottom: 15 }}>\n          <Text>Number of button clicks</Text>\n          <Text >{this.state.clickCount}</Text>\n        </View>\n        <View>\n          <Text style={styles.lableText}>Search Test</Text>\n          <TextInput placeholder='Search' onChangeText={text => this.setState({ searchText: text })} style={{ height: 56, justifyContent: 'center', borderColor: '#ccc', borderWidth: 2, padding: 5, borderRadius: 8, marginTop: 5 }}></TextInput>\n        </View>\n\n        <View style={{ height: 80, justifyContent: 'center', borderColor: '#ccc', borderWidth: 2, padding: 5, borderRadius: 8, marginTop: 15, marginBottom: 15 }}>\n          <Text>Searched text </Text>\n          <Text >{this.state.searchText}</Text>\n        </View>\n\n        <View>\n          <Text style={styles.lableText}>Message Box</Text>\n          <TextInput placeholder='Search' onChangeText={text => this.setState({ searchText: text })} style={{ height: 56, justifyContent: 'center', borderColor: '#ccc', borderWidth: 2, padding: 5, borderRadius: 8, marginTop: 5 }}></TextInput>\n        </View>\n        <StatusBar style=\"auto\" />\n      </View>\n    );\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 15\n  },\n  lableText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  clickButton: {\n    backgroundColor: '#FFA978',\n    height: 56,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: '#fff'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}