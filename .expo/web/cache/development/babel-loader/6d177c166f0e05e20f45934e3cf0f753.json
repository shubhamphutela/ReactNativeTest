{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Calendar, CalendarList, Arrow } from 'react-native-calendars';\nimport * as Font from 'expo-font';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      clickCount: 1,\n      searchText: 'Text',\n      fontLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'Bold': require(\"./assets/Fonts/Biennale-Bold.otf\"),\n                'Medium': require(\"./assets/Fonts/Biennale-Medium.otf\")\n              }));\n\n            case 2:\n              this.setState({\n                fontLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(StatusBar, {\n          style: \"auto\"\n        }), _jsx(Text, {\n          style: styles.lableText,\n          children: \"Click test\"\n        }), _jsx(Pressable, {\n          style: styles.clickButton,\n          onPress: function onPress() {\n            _this2.setState({\n              clickCount: _this2.state.clickCount + 1\n            });\n          },\n          children: _jsx(Text, {\n            style: styles.whiteText,\n            children: \"Click me\"\n          })\n        }), _jsxs(View, {\n          style: [styles.commonBox2],\n          children: [_jsx(View, {\n            style: styles.dummyImage\n          }), _jsxs(View, {\n            style: {\n              width: '75%'\n            },\n            children: [_jsx(Text, {\n              style: styles.commonText,\n              children: \"Number of button clicks\"\n            }), _jsx(Text, {\n              style: styles.grayText,\n              children: this.state.clickCount\n            })]\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.lableText,\n            children: \"Search Test\"\n          }), _jsx(TextInput, {\n            placeholder: 'Search',\n            onChangeText: function onChangeText(text) {\n              return _this2.setState({\n                searchText: text\n              });\n            },\n            style: [styles.commonBox2, {\n              height: 52,\n              padding: 6,\n              marginTop: 0,\n              fontSize: 18,\n              color: '#ccc',\n              fontFamily: 'Medium',\n              letterSpacing: 1\n            }]\n          })]\n        }), _jsxs(View, {\n          style: [styles.commonBox2],\n          children: [_jsx(View, {\n            style: styles.dummyImage\n          }), _jsxs(View, {\n            style: {\n              width: '75%'\n            },\n            children: [_jsx(Text, {\n              style: styles.commonText,\n              children: \"Searched text\"\n            }), _jsx(Text, {\n              style: styles.grayText,\n              children: this.state.searchText\n            })]\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.lableText,\n            children: \"Message Box\"\n          }), _jsxs(View, {\n            style: styles.messageBox,\n            children: [_jsxs(View, {\n              style: {\n                width: '70%'\n              },\n              children: [_jsx(Text, {\n                style: styles.commonText,\n                children: \"This is an empty state, to be used for messages and/or blog articles.\"\n              }), _jsx(Text, {\n                style: [styles.commonText, {\n                  color: '#ccc',\n                  lineHeight: 20,\n                  marginTop: 15\n                }],\n                children: \"Four lines to describe the message/article to be highlighted. The text is accompanied by an illustration in the top right-hand corner.\"\n              }), _jsx(Text, {\n                style: [styles.lableText, {\n                  color: '#B4EDA0',\n                  textAlign: 'right',\n                  margin: 12\n                }],\n                children: \"Not Now\"\n              })]\n            }), _jsxs(View, {\n              style: {\n                width: '30%'\n              },\n              children: [_jsx(Image, {\n                source: require(\"./assets/Illustrations.png\"),\n                style: {\n                  width: 130,\n                  height: 130\n                }\n              }), _jsx(View, {\n                children: _jsx(Pressable, {\n                  style: [styles.clickButton, {\n                    width: '100%',\n                    margin: 5,\n                    backgroundColor: '#B4EDA0',\n                    marginTop: 32\n                  }],\n                  children: _jsx(Text, {\n                    style: styles.whiteText,\n                    children: \"See message\"\n                  })\n                })\n              })]\n            })]\n          })]\n        }), _jsx(Text, {\n          style: styles.lableText,\n          children: \"Calendar test \"\n        }), _jsxs(View, {\n          style: [styles.calenderBox],\n          children: [_jsx(Calendar, {\n            currentMonth: '2022-04-26',\n            hideArrows: false,\n            renderArrow: function renderArrow(left) {\n              return _jsxs(View, {\n                style: {\n                  backgroundColor: '#cccccc70',\n                  height: 50,\n                  width: 50,\n                  borderRadius: 8,\n                  padding: 5\n                },\n                children: [\" \", _jsx(Ionicons, {\n                  name: \"md-arrow-forward-sharp\",\n                  size: 39,\n                  color: \"#000\"\n                })]\n              });\n            },\n            markingType: 'period',\n            markedDates: {\n              '2022-04-23': {\n                marked: true,\n                dotColor: '#50cebb'\n              },\n              '2022-04-24': {\n                marked: true,\n                dotColor: '#50cebb'\n              },\n              '2022-04-25': {\n                startingDay: true,\n                color: '#50cebb',\n                textColor: 'white'\n              },\n              '2022-04-26': {\n                color: '#70d7c7',\n                textColor: 'white'\n              },\n              '2022-04-27': {\n                color: '#70d7c7',\n                textColor: 'white',\n                marked: true,\n                dotColor: 'white'\n              },\n              '2022-04-28': {\n                color: '#70d7c7',\n                textColor: 'white'\n              },\n              '2022-04-29': {\n                endingDay: true,\n                color: '#50cebb',\n                textColor: 'white'\n              }\n            },\n            removeClippedSubviews: false,\n            scrollEnabled: true,\n            selectedDate: '2015-08-15',\n            showControls: true,\n            showEventIndicators: true,\n            startDate: '2015-08-01',\n            titleFormat: 'MMMM YYYY',\n            weekStart: 1\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            children: [_jsx(Pressable, {\n              style: [styles.clickButton, {\n                width: '46%',\n                margin: 10\n              }],\n              onPress: function onPress() {\n                subtractMonth();\n              },\n              children: _jsx(Text, {\n                style: styles.whiteText,\n                children: \"Previous week\"\n              })\n            }), _jsx(Pressable, {\n              style: [styles.clickButton, {\n                width: '46%',\n                margin: 10\n              }],\n              onPress: function onPress() {\n                addMonth();\n              },\n              children: _jsx(Text, {\n                style: styles.whiteText,\n                children: \"Next week\"\n              })\n            })]\n          })]\n        }), _jsx(Text, {\n          style: [styles.lableText],\n          children: \"List Test\"\n        }), _jsxs(View, {\n          style: styles.listBox,\n          children: [_jsx(Text, {\n            style: [styles.grayText, {\n              marginLeft: 25\n            }],\n            children: \"Food\"\n          }), _jsxs(View, {\n            style: styles.commonBox,\n            children: [_jsx(View, {\n              style: styles.dummyImage\n            }), _jsxs(View, {\n              style: {\n                width: '75%'\n              },\n              children: [_jsx(Text, {\n                style: styles.commonText,\n                children: \"Bananas\"\n              }), _jsx(Text, {\n                style: styles.grayText,\n                children: \"Grocery Ape\"\n              })]\n            }), _jsx(View, {\n              children: _jsx(Text, {\n                style: styles.commonText,\n                children: \"2KG\"\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.commonBox,\n            children: [_jsx(View, {\n              style: styles.dummyImage\n            }), _jsxs(View, {\n              style: {\n                width: '75%'\n              },\n              children: [_jsx(Text, {\n                style: styles.commonText,\n                children: \"Sugar\"\n              }), _jsx(Text, {\n                style: styles.grayText,\n                children: \"Candy shop\"\n              })]\n            }), _jsx(View, {\n              children: _jsx(Text, {\n                style: styles.commonText,\n                children: \"2KG\"\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.commonBox,\n            children: [_jsx(View, {\n              style: styles.dummyImage\n            }), _jsxs(View, {\n              style: {\n                width: '75%'\n              },\n              children: [_jsx(Text, {\n                style: styles.commonText,\n                children: \"Tuna\"\n              }), _jsx(Text, {\n                style: styles.grayText,\n                children: \"Grocery Ape\"\n              })]\n            }), _jsx(View, {\n              children: _jsx(Text, {\n                style: styles.commonText,\n                children: \"2KG\"\n              })\n            })]\n          }), _jsx(Text, {\n            style: [styles.grayText, {\n              marginLeft: 25,\n              marginTop: 15\n            }],\n            children: \"Technology\"\n          }), _jsxs(View, {\n            style: styles.commonBox,\n            children: [_jsx(View, {\n              style: styles.dummyImage\n            }), _jsxs(View, {\n              style: {\n                width: '75%'\n              },\n              children: [_jsx(Text, {\n                style: styles.commonText,\n                children: \"Polystation\"\n              }), _jsx(Text, {\n                style: styles.grayText,\n                children: \"Stairsmart\"\n              })]\n            }), _jsx(View, {\n              children: _jsx(Text, {\n                style: styles.commonText,\n                children: \"2KG\"\n              })\n            })]\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  grayText: {\n    fontSize: 18,\n    color: '#ccc',\n    fontFamily: 'Medium',\n    letterSpacing: 1\n  },\n  dummyImage: {\n    backgroundColor: '#ccc',\n    borderRadius: 8,\n    height: 38,\n    width: 38,\n    margin: 6,\n    marginRight: 15\n  },\n  commonText: {\n    fontSize: 18,\n    color: '#333333',\n    fontFamily: 'Medium',\n    color: '#4A4A4A',\n    letterSpacing: 1,\n    justifyContent: 'center'\n  },\n  calenderBox: {\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 8\n  },\n  commonBox: {\n    height: 80,\n    padding: 17,\n    borderBottomColor: '#ccc',\n    borderBottomWidth: 1,\n    flexDirection: 'row'\n  },\n  commonBox2: {\n    height: 70,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 15,\n    marginBottom: 15,\n    flexDirection: 'row',\n    fontSize: 25,\n    letterSpacing: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 15\n  },\n  lableText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 5,\n    marginTop: 30,\n    fontFamily: 'Bold',\n    color: '#4A4A4A',\n    letterSpacing: 1\n  },\n  clickButton: {\n    backgroundColor: '#FFA978',\n    height: 56,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  whiteText: {\n    color: '#fff',\n    fontSize: 19,\n    fontFamily: 'Medium',\n    letterSpacing: 1\n  },\n  messageBox: {\n    backgroundColor: '#EAFFC9',\n    borderRadius: 8,\n    marginBottom: 15,\n    padding: 15,\n    maxWidth: '100%',\n    flexDirection: 'row'\n  },\n  listBox: {\n    height: 400,\n    borderRadius: 8,\n    marginBottom: 15,\n    marginTop: 15,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 15,\n    paddingLeft: 0,\n    paddingRight: 0\n  }\n});","map":{"version":3,"sources":["D:/TestProject/App.js"],"names":["StatusBar","React","Calendar","CalendarList","Arrow","Font","Ionicons","App","state","clickCount","searchText","fontLoaded","loadAsync","require","setState","styles","container","lableText","clickButton","whiteText","commonBox2","dummyImage","width","commonText","grayText","text","height","padding","marginTop","fontSize","color","fontFamily","letterSpacing","messageBox","lineHeight","textAlign","margin","backgroundColor","calenderBox","left","borderRadius","marked","dotColor","startingDay","textColor","endingDay","flexDirection","subtractMonth","addMonth","listBox","marginLeft","commonBox","Component","StyleSheet","create","marginRight","justifyContent","borderColor","borderWidth","borderBottomColor","borderBottomWidth","marginBottom","flex","fontWeight","alignItems","maxWidth","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Pressable, Image, TextInput } from 'react-native';\nimport { Calendar, CalendarList, Arrow } from 'react-native-calendars';\nimport * as Font from 'expo-font';\nimport Ionicons from '@expo/vector-icons/Ionicons';\n\nexport default class App extends React.Component {\n\n  state = {\n    clickCount: 1,\n    searchText: 'Text',\n    fontLoaded: false\n  };\n  constructor() {\n    super();\n  }\n\n  async componentDidMount() {\n    await Font.loadAsync({\n      'Bold': require('./assets/Fonts/Biennale-Bold.otf'),\n      'Medium': require('./assets/Fonts/Biennale-Medium.otf')\n      // 'Biennale-Bold': require('./assets/Fonts/Biennale-Bold.otf'),\n    });\n\n    this.setState({ fontLoaded: true });\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        <StatusBar style=\"auto\" />\n        <Text style={styles.lableText}>Click test</Text>\n        <Pressable style={styles.clickButton} onPress={() => { this.setState({ clickCount: this.state.clickCount + 1 }) }}>\n          <Text style={styles.whiteText}>Click me</Text>\n        </Pressable>\n        <View style={[styles.commonBox2]}>\n          <View style={styles.dummyImage}></View>\n          <View style={{ width: '75%' }}>\n            <Text style={styles.commonText}>Number of button clicks</Text>\n            <Text style={styles.grayText}>{this.state.clickCount}</Text>\n          </View>\n        </View>\n\n        <View>\n          <Text style={styles.lableText}>Search Test</Text>\n          <TextInput placeholder={'Search'} onChangeText={text => this.setState({ searchText: text })} style={[styles.commonBox2, { height: 52, padding: 6, marginTop: 0, fontSize: 18, color: '#ccc', fontFamily: 'Medium', letterSpacing: 1 }]}></TextInput>\n        </View>\n\n        <View style={[styles.commonBox2]}>\n          <View style={styles.dummyImage}></View>\n          <View style={{ width: '75%' }}>\n            <Text style={styles.commonText}>Searched text</Text>\n            <Text style={styles.grayText}>{this.state.searchText}</Text>\n          </View>\n        </View>\n\n        <View >\n          <Text style={styles.lableText}>Message Box</Text>\n          <View style={styles.messageBox}>\n            <View style={{ width: '70%' }}>\n              <Text style={styles.commonText}>This is an empty state, to be used for messages and/or blog articles.</Text>\n              <Text style={[styles.commonText, { color: '#ccc', lineHeight: 20, marginTop: 15 }]}>Four lines to describe the message/article to be highlighted. The text is accompanied by an illustration in the top right-hand corner.</Text>\n              <Text style={[styles.lableText, { color: '#B4EDA0', textAlign: 'right', margin: 12 }]}>Not Now</Text>\n            </View>\n            <View style={{ width: '30%' }}>\n              <Image source={require('./assets/Illustrations.png')} style={{ width: 130, height: 130 }} />\n              <View>\n                <Pressable style={[styles.clickButton, { width: '100%', margin: 5, backgroundColor: '#B4EDA0', marginTop: 32 }]} >\n                  <Text style={styles.whiteText}>See message</Text>\n                </Pressable>\n              </View>\n            </View>\n\n          </View>\n\n        </View>\n\n        <Text style={styles.lableText}>Calendar test </Text>\n        <View style={[styles.calenderBox]}>\n\n          <Calendar\n            currentMonth={'2022-04-26'}\n            hideArrows={false}\n            renderArrow={left => <View style={{ backgroundColor: '#cccccc70', height: 50, width: 50, borderRadius: 8, padding: 5 }}> <Ionicons name=\"md-arrow-forward-sharp\" size={39} color='#000' /></View>}\n            markingType={'period'}\n            markedDates={{\n              '2022-04-23': { marked: true, dotColor: '#50cebb' },\n              '2022-04-24': { marked: true, dotColor: '#50cebb' },\n              '2022-04-25': { startingDay: true, color: '#50cebb', textColor: 'white' },\n              '2022-04-26': { color: '#70d7c7', textColor: 'white' },\n              '2022-04-27': { color: '#70d7c7', textColor: 'white', marked: true, dotColor: 'white' },\n              '2022-04-28': { color: '#70d7c7', textColor: 'white' },\n              '2022-04-29': { endingDay: true, color: '#50cebb', textColor: 'white' }\n            }}\n            removeClippedSubviews={false}\n            scrollEnabled={true}\n            selectedDate={'2015-08-15'}\n            showControls={true}\n            showEventIndicators={true}\n            startDate={'2015-08-01'}\n            titleFormat={'MMMM YYYY'}\n            weekStart={1}\n          />\n          <View style={{ flexDirection: 'row' }}>\n            <Pressable style={[styles.clickButton, { width: '46%', margin: 10 }]} onPress={() => { subtractMonth() }}>\n              <Text style={styles.whiteText}>Previous week</Text>\n            </Pressable>\n            <Pressable style={[styles.clickButton, { width: '46%', margin: 10 }]} onPress={() => { addMonth() }}>\n              <Text style={styles.whiteText}>Next week</Text>\n            </Pressable>\n          </View>\n        </View>\n        <Text style={[styles.lableText]}>List Test</Text>\n\n        <View style={styles.listBox}>\n          <Text style={[styles.grayText, { marginLeft: 25 }]}>Food</Text>\n          <View style={styles.commonBox}>\n            <View style={styles.dummyImage}></View>\n            <View style={{ width: '75%' }}>\n              <Text style={styles.commonText}>Bananas</Text>\n              <Text style={styles.grayText}>Grocery Ape</Text>\n            </View>\n            <View>\n              <Text style={styles.commonText}>2KG</Text>\n            </View>\n          </View>\n          <View style={styles.commonBox}>\n            <View style={styles.dummyImage}></View>\n            <View style={{ width: '75%' }}>\n              <Text style={styles.commonText}>Sugar</Text>\n              <Text style={styles.grayText}>Candy shop</Text>\n            </View>\n            <View>\n              <Text style={styles.commonText}>2KG</Text>\n            </View>\n          </View>\n          <View style={styles.commonBox}>\n            <View style={styles.dummyImage}></View>\n            <View style={{ width: '75%' }}>\n              <Text style={styles.commonText}>Tuna</Text>\n              <Text style={styles.grayText}>Grocery Ape</Text>\n            </View>\n            <View>\n              <Text style={styles.commonText}>2KG</Text>\n            </View>\n          </View>\n          <Text style={[styles.grayText, { marginLeft: 25, marginTop: 15 }]}>Technology</Text>\n          <View style={styles.commonBox}>\n            <View style={styles.dummyImage}></View>\n            <View style={{ width: '75%' }}>\n              <Text style={styles.commonText}>Polystation</Text>\n              <Text style={styles.grayText}>Stairsmart</Text>\n            </View>\n            <View>\n              <Text style={styles.commonText}>2KG</Text>\n            </View>\n          </View>\n\n        </View>\n      </View>\n    );\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  grayText: {\n    fontSize: 18,\n    color: '#ccc',\n    fontFamily: 'Medium',\n    letterSpacing: 1\n  },\n  dummyImage: {\n    backgroundColor: '#ccc', borderRadius: 8, height: 38, width: 38, margin: 6, marginRight: 15\n  },\n  commonText: {\n    fontSize: 18,\n    color: '#333333',\n    fontFamily: 'Medium',\n    color: '#4A4A4A',\n    letterSpacing: 1,\n    justifyContent: 'center'\n  },\n  calenderBox: {\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 8\n  },\n  commonBox: {\n    height: 80, padding: 17,\n    borderBottomColor: '#ccc', borderBottomWidth: 1,\n    flexDirection: 'row'\n  },\n  commonBox2: {\n    height: 70, borderColor: '#ccc', borderWidth: 1, padding: 12, borderRadius: 8, marginTop: 15, marginBottom: 15,\n    flexDirection: 'row', fontSize: 25, letterSpacing: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 15\n  },\n  lableText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 5,\n    marginTop: 30,\n    fontFamily: 'Bold',\n    color: '#4A4A4A',\n    letterSpacing: 1\n  },\n  clickButton: {\n    backgroundColor: '#FFA978',\n    height: 56,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  whiteText: {\n    color: '#fff',\n    fontSize: 19,\n    fontFamily: 'Medium',\n    letterSpacing: 1\n  },\n  messageBox: {\n    backgroundColor: '#EAFFC9',\n    // height: 250,\n    borderRadius: 8,\n    marginBottom: 15,\n    padding: 15,\n    maxWidth: '100%',\n    flexDirection: 'row'\n  },\n  listBox: {\n    height: 400,\n    borderRadius: 8,\n    marginBottom: 15,\n    marginTop: 15,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 15,\n    paddingLeft: 0,\n    paddingRight: 0\n  }\n});\n"]},"metadata":{},"sourceType":"module"}